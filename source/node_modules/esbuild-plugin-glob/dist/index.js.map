{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import chokidar from 'chokidar';\nimport * as esbuild from 'esbuild';\nimport fs from 'fs';\nimport match from 'minimatch';\nimport path from 'path';\nimport glob from 'tiny-glob';\nimport invariant from 'tiny-invariant';\n\ninterface GlobPluginOptions<TControls extends boolean> {\n  chokidarOptions?: chokidar.WatchOptions;\n  /** Setting this to true returns a tuple with the plugin and a controls object */\n  controls?: TControls;\n  /** Disables all logging */\n  silent?: boolean;\n  additionalEntrypoints?: string[];\n}\n\ninterface GlobPluginControls {\n  /** Stops watching if in watch mode */\n  stopWatching: () => Promise<void>;\n}\n\ntype ReturnValue<TControls extends boolean> = TControls extends true\n  ? [esbuild.Plugin, GlobPluginControls]\n  : esbuild.Plugin;\n\nfunction globPlugin<TControls extends boolean = false>({\n  chokidarOptions,\n  controls,\n  silent = false,\n  additionalEntrypoints = [],\n}: GlobPluginOptions<TControls> = {}): ReturnValue<TControls> {\n  const log = createLogger(silent);\n\n  const context = {\n    watcher: undefined as chokidar.FSWatcher | undefined,\n  };\n\n  const controlFunctions: GlobPluginControls = {\n    async stopWatching() {\n      if (!context.watcher) return;\n      await context.watcher.close();\n    },\n  };\n\n  const plugin: esbuild.Plugin = {\n    name: 'glob',\n    async setup(build) {\n      if (\n        !Array.isArray(build.initialOptions.entryPoints) ||\n        !Array.isArray(additionalEntrypoints)\n      ) {\n        throw new TypeError('GlobPlugin currently only supports array entrypoints');\n      }\n\n      // Watch mode\n      if (build.initialOptions.watch) {\n        const entryGlobs = [...build.initialOptions.entryPoints, ...additionalEntrypoints];\n        const watcher = chokidar.watch(entryGlobs, chokidarOptions);\n\n        context.watcher = watcher;\n\n        // AUGMENT OPTIONS\n        // ---------------\n        // Plugin takes care of running the build, so disable initial run by overriding entryPoints\n        build.initialOptions.entryPoints = undefined;\n\n        // Plugin takes care of watching fs, so disable esbuild watch\n        const onRebuild =\n          typeof build.initialOptions.watch === 'object'\n            ? build.initialOptions.watch.onRebuild\n            : undefined;\n        build.initialOptions.watch = false;\n\n        // Plugin relies on incremental and metafile options\n        const sharedOptions = {\n          ...build.initialOptions,\n          incremental: true,\n          metafile: true,\n        };\n\n        // MAPS\n        // ----\n        const entryToInputsMap: Map<string, string[]> = new Map();\n        const entryToBuildResultMap: Map<string, esbuild.BuildResult> = new Map();\n        const entryToOutputsMap: Map<string, string[]> = new Map();\n\n        // UTILITY FUNCTIONS\n        // -----------------\n        // Test if the provided path matches the entry globs\n        const matchesGlobs = (filePath: string): boolean => {\n          return entryGlobs.some((glob) => match(filePath, glob));\n        };\n\n        // Parse the build result and update watcher and maps\n        const handleBuildResult = async (\n          entry: string,\n          buildResult: esbuild.BuildResult,\n        ): Promise<void> => {\n          invariant(watcher);\n          invariant(buildResult.metafile, 'Expected metafile to be created');\n\n          const outputs = Object.keys(buildResult.metafile.outputs);\n          const inputs = Object.values(buildResult.metafile.outputs)\n            .filter((output) => !!output.entryPoint)\n            .flatMap((output) =>\n              Object.keys(output.inputs)\n                .filter((input) => !input.includes('node_modules'))\n                .map((input) => normalizePath(input)),\n            );\n\n          watcher.add(inputs);\n\n          entryToInputsMap.set(entry, inputs);\n          entryToOutputsMap.set(entry, outputs);\n          entryToBuildResultMap.set(entry, buildResult);\n\n          onRebuild?.(null, buildResult);\n        };\n\n        // Find the entries by the input path\n        const findEntriesByInput = (input: string): string[] => {\n          return (\n            [...entryToInputsMap.entries()]\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              .filter(([_entry, inputs]) => inputs.includes(input))\n              .map(([entry]) => entry)\n          );\n        };\n\n        // WATCH\n        // -----\n        watcher\n          .on('add', async (addedPath) => {\n            if (!matchesGlobs(addedPath)) return;\n\n            log('[add]', addedPath);\n\n            const buildResult = await esbuild.build({\n              ...sharedOptions,\n              entryPoints: [addedPath],\n            });\n\n            handleBuildResult(addedPath, buildResult);\n          })\n          .on('change', async (changedPath) => {\n            const entries = findEntriesByInput(changedPath);\n\n            entries.forEach(async (entry) => {\n              log('[change]', entry);\n\n              const oldResult = entryToBuildResultMap.get(entry);\n\n              try {\n                invariant(oldResult?.rebuild, 'Expected all build results to be incremental');\n                handleBuildResult(entry, await oldResult.rebuild());\n              } catch {\n                //? Error is ignored, because esbuild handles logging of build errors already\n              }\n            });\n          })\n          .on('unlink', async (unlinkedPath) => {\n            if (build.initialOptions.write === false) return;\n\n            const outputPaths = entryToOutputsMap.get(unlinkedPath);\n\n            if (outputPaths) {\n              log('[unlink]', unlinkedPath);\n              outputPaths.forEach((outputPath) => fs.unlinkSync(outputPath));\n            }\n          });\n      } else {\n        const entryGlobs = [...build.initialOptions.entryPoints, ...additionalEntrypoints];\n        const resolvedEntryPoints = await Promise.all(\n          entryGlobs.map((entryPoint) => glob(entryPoint)),\n        ).then((nestedEntryPoints) => nestedEntryPoints.flat());\n        build.initialOptions.entryPoints = resolvedEntryPoints;\n      }\n    },\n  };\n\n  return (controls ? [plugin, controlFunctions] : plugin) as any;\n}\n\n// UTILITIES\n// ---------\n\nfunction createLogger(silent: boolean) {\n  return (...arguments_: Parameters<typeof console.log>) => {\n    if (!silent) console.log(...arguments_);\n  };\n}\n\nfunction normalizePath(filePath: string): string {\n  return path.relative(process.cwd(), filePath.replace(/^(\\w+:)/, ''));\n}\n\nexport { globPlugin };\n"],"names":["chokidar","match","invariant","esbuild","fs","glob","path"],"mappings":"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"}